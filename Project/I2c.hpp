#pragma once

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// INCLUDES /////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include <stdint.h>

///////////////////////////////////////////////////////////////////////////////
/////////////////////////// CLASSES/STRUCTURES ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

template <class DERIVED_TYPE>
class I2c
{
    friend DERIVED_TYPE;
    DERIVED_TYPE & derivedType = static_cast <DERIVED_TYPE &>(*this);

    public:
        enum class EI2c : uint8_t
        {
            Zero,
            One,
            Two,
            Three
        };

        I2c () = default;
        ~I2c () = default;

        void Send    (const EI2c vI2c, const uint16_t vAddress, uint8_t * const vData, const uint16_t vLen) { return derivedType.Send    (vI2c, vAddress, vData, vLen); }
        void Receive (const EI2c vI2c, const uint16_t vAddress, uint8_t * const vData, const uint16_t vLen) { return derivedType.Receive (vI2c, vAddress, vData, vLen); }
};

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////// END OF FILE ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////